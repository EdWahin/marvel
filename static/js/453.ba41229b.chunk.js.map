{"version":3,"file":"static/js/453.ba41229b.chunk.js","mappings":"yPASMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,SAACG,EAAA,EAAO,IACnB,IAAK,UACD,OAAOD,GAAiB,SAACD,EAAS,KAAM,SAACE,EAAA,EAAO,IACpD,IAAK,YACD,OAAO,SAACF,EAAS,IACrB,IAAK,QACD,OAAO,SAACG,EAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,4BAE5B,EA8EA,EA5EmB,WAEf,OAAkCC,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KAC9B,GAA4CF,EAAAA,EAAAA,WAAS,GAAM,eAApDJ,EAAc,KAAEO,EAAiB,KACxC,GAA4BH,EAAAA,EAAAA,UAAS,GAAE,eAAhCI,EAAM,KAAEC,EAAS,KACxB,GAAoCL,EAAAA,EAAAA,WAAS,GAAM,eAA5CM,EAAU,KAAEC,EAAa,KAEhC,GAA8CC,EAAAA,EAAAA,KAAtCC,EAAY,EAAZA,aAAcf,EAAO,EAAPA,QAASgB,EAAU,EAAVA,YAE/BC,EAAAA,EAAAA,YAAU,WACNC,EAAUR,GAAQ,EACtB,GAAG,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACbV,GAAVU,GACAJ,EAAaL,GACRU,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,YAAY,GAC3C,EAEMK,EAAoB,SAACC,GACvB,IAAIC,GAAQ,EACRD,EAAaE,OAAS,IACtBD,GAAQ,GAGZf,GAAa,SAAAD,GAAS,wBAAQA,IAAS,OAAKe,GAAY,IACxDb,GAAkB,SAAAP,GAAc,OAAI,CAAK,IACzCS,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BG,GAAc,SAAAD,GAAU,OAAIW,CAAK,GACrC,EA+BA,OACI,iBAAKE,UAAU,eAAc,UACxB1B,EAAWC,GAAS,kBA/B7B,SAAqB0B,GACjB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GACzB,OACI,eACIL,UAAU,eACVM,SAAU,EAAE,UAGZ,UAAC,KAAI,CAACC,GAAE,kBAAaH,EAAKI,IAAK,WAC3B,gBAAKC,IAAKL,EAAKM,UAAWC,IAAKP,EAAKQ,MAAOZ,UAAU,sBACrD,gBAAKA,UAAU,oBAAmB,SAAEI,EAAKQ,SACzC,gBAAKZ,UAAU,qBAAoB,SAAEI,EAAKS,YALzCR,EASjB,IAEA,OACI,eAAIL,UAAU,eAAc,SACvBE,GAGb,CASmCY,CAAYhC,EAAU,GAAEL,IACnD,mBACIuB,UAAU,mCACVe,SAAUtC,EACVuC,MAAO,CAACC,QAAS9B,EAAa,OAAS,IACvC+B,QAAS,kBAAMzB,EAAUR,EAAO,EAAC,UAEjC,gBAAKe,UAAU,QAAO,SAAC,kBAIvC,EC5EA,EAjBmB,WAEf,OACI,iCACI,UAACmB,EAAA,EAAM,YACH,iBACIC,KAAK,cACLC,QAAQ,8BAEZ,2BAAO,oBAEX,SAACC,EAAA,EAAS,KACV,SAAC,EAAU,MAGvB,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting': \n            return <Spinner />;\n        case 'loading': \n            return newItemLoading ? <Component /> : <Spinner />;\n        case 'confirmed':\n            return <Component />;\n        case 'error':\n            return <ErrorMessage />;\n        default: \n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicList, setComicList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicEnded, setComicEnded] = useState(false);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicListLoaded = (newComicList) => {\n        let ended = false;\n        if (newComicList.length < 8) {\n            ended = true;\n        }\n\n        setComicList(comicList => [...comicList, ...newComicList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicEnded(comicEnded => ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li\n                    className=\"comics__item\"\n                    tabIndex={0}\n                    key={i}\n                >\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    // const items = renderItems(comicList);\n\n    // const errorMessage = error ? <ErrorMessage /> : null;\n    // const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicList), newItemLoading)}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{display: comicEnded ? 'none' : ''}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","useState","comicList","setComicList","setNewItemLoading","offset","setOffset","comicEnded","setComicEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicListLoaded","newComicList","ended","length","className","arr","items","map","item","i","tabIndex","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","Helmet","name","content","AppBanner"],"sourceRoot":""}